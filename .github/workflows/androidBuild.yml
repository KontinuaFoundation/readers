name: Android Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Run Kotlin Build
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Generate hash for the Android directory
      - name: Generate Android code hash
        id: android-hash
        run: |
          if [ -d "ReadersAndroidJetpack" ]; then
            find ReadersAndroidJetpack -type f | sort | xargs md5sum | md5sum | cut -d' ' -f1 > android_hash.txt
            echo "hash=$(cat android_hash.txt)" >> $GITHUB_OUTPUT
          else
            echo "hash=no-android-files" >> $GITHUB_OUTPUT
          fi

      # Step 3: Check cache based on the hash
      - name: Cache build results
        id: cache-build
        uses: actions/cache@v3
        with:
          path: .cache/android-build
          key: android-build-${{ steps.android-hash.outputs.hash }}

      #Step 4: Set up Java version
      - name: set up JDK 17
        if: steps.cache-build.outputs.cache-hit != 'true' && steps.android-hash.outputs.hash != 'no-android-files'
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle

      #Step 5: Build the project
      - name: Build with Gradle
        if: steps.cache-build.outputs.cache-hit != 'true' && steps.android-hash.outputs.hash != 'no-android-files'
        working-directory: ./ReadersAndroidJetpack
        run: |
          ./gradlew assembleDebug
          mkdir -p ../.cache/android-build
          echo "Build passed at $(date)" > ../.cache/android-build/result

      #Step 6: Report success
      - name: Report build status
        if: success()
        run: echo "Android build successful!"
